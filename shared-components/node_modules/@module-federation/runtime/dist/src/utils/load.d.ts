import { CreateScriptHookReturn } from '@module-federation/sdk';
import { Remote, RemoteEntryExports, RemoteInfo } from '../type';
export declare function loadEsmEntry({ entry, remoteEntryExports, }: {
    entry: string;
    remoteEntryExports: RemoteEntryExports | undefined;
}): Promise<RemoteEntryExports>;
export declare function loadSystemJsEntry({ entry, remoteEntryExports, }: {
    entry: string;
    remoteEntryExports: RemoteEntryExports | undefined;
}): Promise<RemoteEntryExports>;
export declare function loadEntryScript({ name, globalName, entry, createScriptHook, }: {
    name: string;
    globalName: string;
    entry: string;
    createScriptHook?: (url: string, attrs?: Record<string, any> | undefined) => CreateScriptHookReturn;
}): Promise<RemoteEntryExports>;
export declare function getRemoteEntryUniqueKey(remoteInfo: RemoteInfo): string;
export declare function getRemoteEntry({ remoteEntryExports, remoteInfo, createScriptHook, }: {
    remoteInfo: RemoteInfo;
    remoteEntryExports?: RemoteEntryExports | undefined;
    createScriptHook?: (url: string, attrs?: Record<string, any> | undefined) => CreateScriptHookReturn;
}): Promise<RemoteEntryExports | void>;
export declare function getRemoteInfo(remote: Remote): RemoteInfo;
